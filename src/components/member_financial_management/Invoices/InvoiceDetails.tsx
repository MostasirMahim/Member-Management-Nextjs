"use client";

import React from "react";
import { motion } from "framer-motion";
import {
  Card,
  CardHeader,
  CardTitle,
  CardContent,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";

interface InvoiceItem {
  products?: { name: string; sku: string }[];
  restaurant_items?: { name: string }[];
  facility?: { name: string }[];
  event_tickets?: { name: string }[];
}

interface Invoice {
  invoice_number: string;
  invoice_type: string;
  generated_by: string;
  member: string;
  restaurant?: string | null;
  event?: string | null;
  issue_date: string;
  due_date?: string | null;
  status: string;
  is_full_paid?: boolean;
  invoice_items?: InvoiceItem[];
  total_amount: string;
  paid_amount: string;
  balance_due: string;
  discount: string;
  promo_code: string;
  tax?: string | null;
  currency: string;
  excel_upload_date?: string | null;
  created_at: string;
  updated_at: string;
}

interface Props {
  invoice: Invoice;
}

export default function InvoiceDetails({ invoice }: Props) {
   const formatBDTime = (isoString: string) => {
    const date = new Date(isoString);
    return date.toLocaleString("en-BD", {
      timeZone: "Asia/Dhaka",
      year: "numeric",
      month: "short",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    });
  };
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.4 }}
      className="max-w-5xl mx-auto p-4"
    >
      <div className="shadow">
        <CardHeader className="bg-gray-100">
          <CardTitle className="text-2xl font-bold text-gray-800">
            Invoice Details
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">

          {/* Header */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.1 }}
            className="grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg"
          >
            <div className="space-y-1">
              <p className="text-gray-700"><strong>Invoice No:</strong> {invoice.invoice_number}</p>
              <p className="text-gray-700"><strong>Invoice Type:</strong> {invoice.invoice_type}</p>
              <p className="text-gray-700"><strong>Generated By:</strong> {invoice.generated_by}</p>
              <p className="text-gray-700"><strong>Member:</strong> {invoice.member}</p>
            </div>
            <div className="space-y-1">
              {invoice.restaurant && <p className="text-gray-700"><strong>Restaurant:</strong> {invoice.restaurant}</p>}
              {invoice.event && <p className="text-gray-700"><strong>Event:</strong> {invoice.event}</p>}
              <p className="text-gray-700"><strong>Issue Date:</strong> {invoice.issue_date}</p>
              {invoice.due_date && <p className="text-gray-700"><strong>Due Date:</strong> {invoice.due_date}</p>}
              <p>
                <strong>Status:</strong>{" "}
                <Badge
                  className={`${
                    invoice.status === "paid" ? "bg-green-600 text-white" : "bg-red-500 text-white"
                  } px-2 py-1 rounded-lg`}
                >
                  {invoice.status}
                </Badge>
              </p>
            </div>
          </motion.div>

          {/* Items */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.2 }}
          >
            <h3 className="text-xl font-semibold mb-2 border-b pb-2">Invoice Items</h3>
            {!invoice.invoice_items || invoice.invoice_items.length === 0 ? (
              <p className="text-gray-500">No items.</p>
            ) : (
              invoice.invoice_items.map((item, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.05 * index }}
                  className="mb-4 border border-gray-200 p-4 rounded-lg hover:shadow-md transition-shadow duration-300"
                >
                  {/* Products */}
                  {item.products && item.products.length > 0 && (
                    <div className="mb-2">
                      <h4 className="font-medium text-gray-800">Products:</h4>
                      <ul className="list-disc list-inside text-gray-700">
                        {item.products.map((p, i) => (
                          <li key={i}>{p.name} - <span>SKU</span>: {p.sku}</li>
                        ))}
                      </ul>
                    </div>
                  )}

                  {/* Restaurant Items */}
                  {item.restaurant_items && item.restaurant_items.length > 0 && (
                    <div className="mb-2">
                      <h4 className="font-medium text-gray-800">Restaurant Items:</h4>
                      <ul className="list-disc list-inside text-gray-700">
                        {item.restaurant_items.map((r, i) => (
                          <li key={i}>{r.name}</li>
                        ))}
                      </ul>
                    </div>
                  )}

                  {/* Facility */}
                  {item.facility && item.facility.length > 0 && (
                    <div className="mb-2">
                      <h4 className="font-medium text-gray-800">Facility:</h4>
                      <ul className="list-disc list-inside text-gray-700">
                        {item.facility.map((f, i) => (
                          <li key={i}>{f.name}</li>
                        ))}
                      </ul>
                    </div>
                  )}

                  {/* Event Tickets */}
                  {item.event_tickets && item.event_tickets.length > 0 && (
                    <div className="mb-2">
                      <h4 className="font-medium text-gray-800">Event Tickets:</h4>
                      <ul className="list-disc list-inside text-gray-700">
                        {item.event_tickets.map((e, i) => (
                          <li key={i}>{e.name}</li>
                        ))}
                      </ul>
                    </div>
                  )}
                </motion.div>
              ))
            )}
          </motion.div>

          {/* Summary */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.3 }}
            className="border-t pt-4"
          >
            <h3 className="text-xl font-semibold mb-2">Summary</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-2 text-gray-700">
              <p><strong>Total Amount:</strong> {invoice.total_amount} {invoice.currency}</p>
              <p><strong>Paid Amount:</strong> {invoice.paid_amount} {invoice.currency}</p>
              <p><strong>Balance Due:</strong> {invoice.balance_due} {invoice.currency}</p>
              <p><strong>Due Date:</strong> {invoice.due_date || "-"}</p>
              <p><strong>Discount:</strong> {invoice.discount}</p>
              <p><strong>Promo Code:</strong> {invoice.promo_code || "-"}</p>
              <p><strong>Tax:</strong> {invoice.tax || "-"}</p>
              <p><strong>Excel Upload Date:</strong> {invoice.excel_upload_date || "-"}</p>
              <p><strong>Created At:</strong> {formatBDTime(invoice.created_at) || "-"}</p>
              <p><strong>Updated At:</strong> {formatBDTime(invoice.updated_at) || "-"}</p>
            </div>
          </motion.div>
        </CardContent>
      </div>
    </motion.div>
  );
}
